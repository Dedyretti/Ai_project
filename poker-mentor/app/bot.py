import logging
from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes
from app.config import config
# from app.database import db  # –ü–æ–∫–∞ –∑–∞–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–µ–º –ë–î

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

class PokerMentorBot:
    def __init__(self):
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
        is_valid, message = config.validate()
        if not is_valid:
            logger.error(f"–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–µ–≤–∞–ª–∏–¥–Ω–∞: {message}")
            raise ValueError(message)
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö (–ø–æ–∫–∞ –∑–∞–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–æ)
        # db.init_db()
        
        self.token = config.get('TELEGRAM_BOT_TOKEN')
        self.application = Application.builder().token(self.token).build()
        self._setup_handlers()  # ‚Üê –ò–°–ü–†–ê–í–õ–ï–ù–û: –¥–æ–±–∞–≤–∏–ª —Ç–æ—á–∫—É –ø–µ—Ä–µ–¥ setup_handlers
        logger.info("Poker Mentor Bot –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
    
    def _setup_handlers(self):  # ‚Üê –ò–°–ü–†–ê–í–õ–ï–ù–û: –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –º–µ—Ç–æ–¥–∞
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∫–æ–º–∞–Ω–¥"""
        self.application.add_handler(CommandHandler("start", self.start))
        self.application.add_handler(CommandHandler("help", self.show_help))
        self.application.add_handler(CommandHandler("settings", self.settings))
        self.application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, self.handle_message))
    
    async def start(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
        user = update.effective_user
        
        # –ü–æ–∫–∞ –±–µ–∑ –ë–î
        # db_user = db.add_user(
        #     telegram_id=user.id,
        #     username=user.username,
        #     first_name=user.first_name,
        #     last_name=user.last_name
        # )
        
        welcome_text = f"""
üéâ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Poker Mentor, {user.first_name}!

üìä –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:
‚Ä¢ üéÆ –ò–≥—Ä–∞ –ø—Ä–æ—Ç–∏–≤ AI —Å —Ä–∞–∑–Ω—ã–º–∏ —Å—Ç–∏–ª—è–º–∏
‚Ä¢ üìà –ê–Ω–∞–ª–∏–∑ –≤–∞—à–∏—Ö —Ä–∞–∑–¥–∞—á  
‚Ä¢ üìö –û–±—É—á–µ–Ω–∏–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏—è–º
‚Ä¢ üìä –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞

–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ!
        """
        
        keyboard = [
            ["üéÆ –ë—ã—Å—Ç—Ä–∞—è –∏–≥—Ä–∞", "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –∏–≥—Ä—É"],
            ["üìä –ê–Ω–∞–ª–∏–∑ —Ä—É–∫–∏", "üìà –ú–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"],
            ["üìö –û–±—É—á–µ–Ω–∏–µ", "üë§ –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å"]
        ]
        reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
        
        await update.message.reply_text(welcome_text, reply_markup=reply_markup)
        logger.info(f"New user started: {user.id} - {user.username}")
    
    async def show_help(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help"""
        help_text = """
ü§ñ Poker Mentor - –ü–æ–º–æ—â—å

–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
/start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º
/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É
/settings - –ü–æ–∫–∞–∑–∞—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏

–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏:
‚Ä¢ üéÆ –ë—ã—Å—Ç—Ä–∞—è –∏–≥—Ä–∞ - –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
‚Ä¢ ‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –∏–≥—Ä—É - –≤—ã–±—Ä–∞—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏
‚Ä¢ üìä –ê–Ω–∞–ª–∏–∑ —Ä—É–∫–∏ - —Ä–∞–∑–æ–±—Ä–∞—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é —Ä–∞–∑–¥–∞—á—É
‚Ä¢ üìà –ú–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ - –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å –æ–±—É—á–µ–Ω–∏—è
‚Ä¢ üìö –û–±—É—á–µ–Ω–∏–µ - –∏–∑—É—á–∏—Ç—å —Ç–µ–æ—Ä–∏—é –ø–æ–∫–µ—Ä–∞
‚Ä¢ üë§ –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å - –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç
        """
        await update.message.reply_text(help_text)
    
    async def settings(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–ü–æ–∫–∞–∑–∞—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"""
        await update.message.reply_text(
            "‚öôÔ∏è –¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:\n"
            f"‚Ä¢ –í–µ—Ä—Å–∏—è: 1.0\n"
            f"‚Ä¢ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: {config.get('DATABASE_URL', '–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞')}\n"
            f"‚Ä¢ –°—Ç–∞–≤–∫–∏: {config.get('DEFAULT_STAKE', '1/2')}\n\n"
            "–î–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ —Ñ–∞–π–ª config.txt"
        )
    
    async def handle_message(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
        text = update.message.text
        user = update.effective_user
        
        if text == "üéÆ –ë—ã—Å—Ç—Ä–∞—è –∏–≥—Ä–∞":
            await self.quick_game(update, context)
        elif text == "üìä –ê–Ω–∞–ª–∏–∑ —Ä—É–∫–∏":
            await self.analyze_hand(update, context)
        elif text == "üìà –ú–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞":
            await self.show_stats(update, context)
        elif text == "üë§ –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å":
            await self.show_profile(update, context)
        elif text == "üìö –û–±—É—á–µ–Ω–∏–µ":
            await self.show_learning(update, context)
        elif text == "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –∏–≥—Ä—É":
            await self.setup_game(update, context)
        else:
            await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é –∏–ª–∏ –∫–æ–º–∞–Ω–¥—ã!")
    
    async def quick_game(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç –∏–≥—Ä—ã"""
        await update.message.reply_text(
            "üéÆ –ó–∞–ø—É—Å–∫–∞–µ–º –±—ã—Å—Ç—Ä—É—é –∏–≥—Ä—É!\n\n"
            "–ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é:\n"
            "‚Ä¢ –¢–∏–ø: Cash Game\n"
            "‚Ä¢ –ë–ª–∞–π–Ω–¥—ã: 1/2\n" 
            "‚Ä¢ –û–ø–ø–æ–Ω–µ–Ω—Ç: –°–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π AI\n\n"
            "‚ö° –ò–≥—Ä–∞ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è..."
        )
        # –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –Ω–∞—á–∞–ª–∞ –∏–≥—Ä—ã
    
    async def analyze_hand(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–ê–Ω–∞–ª–∏–∑ —Ä—É–∫–∏"""
        await update.message.reply_text(
            "üìä –ê–Ω–∞–ª–∏–∑ —Ä–∞–∑–¥–∞—á–∏\n\n"
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–ø–∏—à–∏—Ç–µ —Ä–∞–∑–¥–∞—á—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\n\n"
            "–ü–æ–∑–∏—Ü–∏—è: [–≤–∞—à–∞ –ø–æ–∑–∏—Ü–∏—è]\n"
            "–ö–∞—Ä—Ç—ã: [–≤–∞—à–∏ –∫–∞—Ä—Ç—ã]\n" 
            "–î–µ–π—Å—Ç–≤–∏—è: [—Ö–æ–¥ —Ä–∞–∑–¥–∞—á–∏]\n\n"
            "–ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤–≤–æ–¥–∞."
        )
    
    async def show_stats(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É"""
        await update.message.reply_text(
            "üìà –í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞\n\n"
            "üìä –û–±—â–∞—è:\n"
            "‚Ä¢ –°—ã–≥—Ä–∞–Ω–æ —Ä–∞–∑–¥–∞—á: 0\n"
            "‚Ä¢ Winrate: 0%\n"
            "‚Ä¢ –õ—É—á—à–∞—è —Ä—É–∫–∞: -\n\n"
            "üéØ –í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ...\n"
            "–°–±–æ—Ä —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –Ω–∞—á–Ω–µ—Ç—Å—è –ø–æ—Å–ª–µ –ø–µ—Ä–≤—ã—Ö –∏–≥—Ä!"
        )
    
    async def show_profile(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å"""
        user = update.effective_user
        await update.message.reply_text(
            f"üë§ –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å\n\n"
            f"ID: {user.id}\n"
            f"–ò–º—è: {user.first_name}\n"
            f"Username: @{user.username if user.username else '–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}\n"
            f"–£—Ä–æ–≤–µ–Ω—å: –ù–æ–≤–∏—á–æ–∫ üéì\n\n"
            f"–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ—è–≤—è—Ç—Å—è –ø–æ–∑–∂–µ!"
        )
    
    async def show_learning(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–ü–æ–∫–∞–∑–∞—Ç—å –æ–±—É—á–µ–Ω–∏–µ"""
        await update.message.reply_text(
            "üìö –û–±—É—á–µ–Ω–∏–µ –ø–æ–∫–µ—Ä—É\n\n"
            "–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–∞–∑–¥–µ–ª—ã:\n"
            "‚Ä¢ üìñ –û—Å–Ω–æ–≤—ã –ø–æ–∫–µ—Ä–∞\n"
            "‚Ä¢ üéØ –ü—Ä–µ—Ñ–ª–æ–ø —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏\n" 
            "‚Ä¢ üìä –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞ –ø–æ–∫–µ—Ä–∞\n"
            "‚Ä¢ üÉè –ü–æ–∑–∏—Ü–∏–æ–Ω–Ω–∞—è –∏–≥—Ä–∞\n\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ–º—É –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è!"
        )
    
    async def setup_game(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏–≥—Ä—ã"""
        await update.message.reply_text(
            "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏–≥—Ä—ã\n\n"
            "–î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:\n"
            "‚Ä¢ –¢–∏–ø –∏–≥—Ä—ã: Cash/Tournament\n"
            "‚Ä¢ –†–∞–∑–º–µ—Ä —Å—Ç–µ–∫–∞\n"
            "‚Ä¢ –°—Ç–∏–ª—å –æ–ø–ø–æ–Ω–µ–Ω—Ç–∞\n"
            "‚Ä¢ –£—Ä–æ–≤–µ–Ω—å —Å–ª–æ–∂–Ω–æ—Å—Ç–∏\n\n"
            "–≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ!"
        )
    
    def run(self):
        """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
        logger.info("Starting Poker Mentor Bot...")
        print("ü§ñ –ó–∞–ø—É—Å–∫ Poker Mentor Bot...")
        print("üõë –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C")
        self.application.run_polling()

# –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞
if __name__ == "__main__":
    try:
        bot = PokerMentorBot()
        bot.run()
    except ValueError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞: {e}")
        print("\nüîß –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ:")
        print("1. –û—Ç–∫—Ä–æ–π—Ç–µ —Ñ–∞–π–ª config.txt")
        print("2. –ó–∞–º–µ–Ω–∏—Ç–µ 'your_bot_token_here' –Ω–∞ –≤–∞—à —Ç–æ–∫–µ–Ω –æ—Ç @BotFather")
        print("3. –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ —Ñ–∞–π–ª –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞ —Å–Ω–æ–≤–∞")
    except Exception as e:
        print(f"üí• –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")